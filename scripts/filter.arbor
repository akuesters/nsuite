SCOREP_REGION_NAMES_BEGIN
 EXCLUDE
tick_type?arb::profile::posix_clock_gettime_monotonic_ns()
*arb::profile::recorder::enter(arb::profile::region_id_type)
*arb::profile::profiler::enter(arb::profile::region_id_type)
*arb::profile::recorder::leave()
*arb::profile::profiler_enter(arb::profile::region_id_type)
*arb::profile::profiler::leave()
*arb::profile::profiler_leave()
arb::simd::simd_detail::indirect_expression*
arb::util::range<U,?V>?arb::util::make_range(const?U&,?const?V&)?*with?U?=?__gnu_cxx::__normal_iterator<double*,?std::vector<double,?arb::util::padded_allocator<double>?>?>;?V?=?__gnu_cxx::__normal_iterator<double*,?std::vector<double,?arb::util::padded_allocator<double>?>?>*
auto?arb::util::canonical_view(Seq&&)?*
arb::util::sentinel_iterator_t<I,?S>?arb::util::make_sentinel_iterator(const?I&,?const?S&)?*with?I?=?__gnu_cxx::__normal_iterator<double*,?std::vector<double,?arb::util::padded_allocator<double>?>?>;?S?=?__gnu_cxx::__normal_iterator<double*,?std::vector<double,?arb::util::padded_allocator<double>?>?>*
arb::util::sentinel_iterator_t<I,?S>?arb::util::make_sentinel_end(const?I&,?const?S&)?*with?I?=?__gnu_cxx::__normal_iterator<double*,?std::vector<double,?arb::util::padded_allocator<double>?>?>;?S?=?__gnu_cxx::__normal_iterator<double*,?std::vector<double,?arb::util::padded_allocator<double>?>?>*
*arb::util::fill(Seq&&,?const?V&)?*with?Seq?=?std::vector<double,?arb::util::padded_allocator<double>?>&;?V?=?int*
*arb::multicore::ion_state::nernst(arb::fvm_value_type)
*arb::multicore::ion_state::init_concentration()
*arb::multicore::ion_state::zero_current()
arb::util::partition_range<SeqIter>?arb::util::partition_view(const?Seq&)?*with?Seq?=?std::vector<int,?arb::util::padded_allocator<int>?>;?SeqIter?=?__gnu_cxx::__normal_iterator<const?int*,?std::vector<int,?arb::util::padded_allocator<int>?>?>;?<template-parameter-1-3>?=?void*
arb::memory::array_view<T,?arb::memory::host_coordinator<T>?>?arb::memory::make_view(std::vector<_Tp,?_Alloc>&)?*with?T?=?double;?Allocator?=?arb::util::padded_allocator<double>*
arb::memory::const_array_view<T,?arb::memory::host_coordinator<T>?>?arb::memory::make_const_view(const?std::vector<_Tp,?_Alloc>&)?*with?T?=?double;?Allocator?=?arb::util::padded_allocator<double>*
std::enable_if_t<(arb::util::is_bidirectional_iterator<E>::value?&&?std::is_constructible<I,?E>::value),?I>?arb::util::upto(I,?E)?*with?I?=?__gnu_cxx::__normal_iterator<const?int*,?std::vector<int,?arb::util::padded_allocator<int>?>?>;?E?=?__gnu_cxx::__normal_iterator<const?int*,?std::vector<int,?arb::util::padded_allocator<int>?>?>*
virtual?*arb::mechanism_cpu_expsyn::write_ions()
virtual?*arb::mechanism_cpu_pas::write_ions()
virtual?*arb::mechanism_cpu_hh::write_ions()
*arb::mechanism_cpu_hh::rates(arb::multicore::mechanism::index_type,?const?simd_value&,?const?simd_value&)
*arb::multicore::shared_state::ions_init_concentration()
*arb::multicore::shared_state::ions_nernst_reversal_potential(arb::fvm_value_type)
virtual?*arb::mechanism_cpu_expsyn::deliver_events(arb::multicore::multi_event_stream<arb::deliverable_event>::state)
*arb::multicore::shared_state::zero_currents()
*arb::multicore::shared_state::add_gj_current()
*arb::multicore::shared_state::update_time_to(arb::fvm_value_type,?arb::fvm_value_type)
*arb::multicore::shared_state::set_dt()
*arb::multicore::shared_state::take_samples(const?state&,?arb::multicore::array&,?arb::multicore::array&)
arb::util::span<typename?std::common_type<_Tp,?_Up>::type>?arb::util::make_span(std::pair<_T1,?_T2>)?*with?I?=?int;?J?=?int*
*arb::fvm_lowered_cell_impl<Backend>::update_ion_state()?*with?Backend?=?arb::multicore::backend*
*arb::memory::copy(LHS&&,?RHS&&)?*with?LHS?=?const?std::vector<double,?arb::util::padded_allocator<double>?>&;?RHS?=?std::vector<double,?arb::util::padded_allocator<double>?>&*
std::enable_if_t<(std::is_same<?<template-parameter-1-1>,?<template-parameter-1-2>?>::value?||?(arb::util::has_common_random_access_iterator<I,?E>::value?&&?arb::util::is_forward_iterator<T>::value)),?typename?std::iterator_traits<_OI>::difference_type>?arb::util::distance(I,?E)?*with?I?=?arb::util::partition_iterator<__gnu_cxx::__normal_iterator<const?int*,?std::vector<int,?arb::util::padded_allocator<int>?>?>?>;?E?=?arb::util::partition_iterator<__gnu_cxx::__normal_iterator<const?int*,?std::vector<int,?arb::util::padded_allocator<int>?>?>?>;?C?=?arb::util::partition_iterator<__gnu_cxx::__normal_iterator<const?int*,?std::vector<int,?arb::util::padded_allocator<int>?>?>?>*
*arb::memory::copy(LHS&&,?RHS&&)?*with?LHS?=?std::vector<double,?arb::util::padded_allocator<double>?>&;?RHS?=?std::vector<double,?arb::util::padded_allocator<double>?>&*
arb::util::span<typename?std::common_type<_Tp,?_Up>::type>?arb::util::make_span(I,?J)?*with?I?=?int;?J?=?int*
SCOREP_REGION_NAMES_END
